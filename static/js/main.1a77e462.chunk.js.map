{"version":3,"sources":["components/gridLayout.js","App.js","index.js"],"names":["GridLayout","state","count","highScore","clickedImage","handleIncrement","value","clicked","_this","length","includes","setState","push","console","log","_this2","this","pictures","props","images","i","j","Math","floor","random","_ref","react_default","a","createElement","className","map","pic","key","id","onClick","src","link","alt","React","Component","Images","ReactDOM","render","gridLayout","document","getElementById"],"mappings":"uKAoEeA,6MAjEbC,MAAQ,CACNC,MAAO,EACPC,UAAW,EACXC,aAAc,MAGhBC,gBAAkB,SAAAC,GAChB,IAAIC,EAAUC,EAAKP,MAAMG,aACrBG,EAAQE,QAAU,EAChBF,EAAQG,SAASJ,IACnBE,EAAKG,SAAS,CAAET,MAAO,IACvBM,EAAKG,SAAS,CAAEP,aAAc,KAC1BI,EAAKP,MAAMC,OAASM,EAAKP,MAAME,WACjCK,EAAKG,SAAS,CAAER,UAAWK,EAAKP,MAAMC,UAGxCK,EAAQK,KAAKN,GACbE,EAAKG,SAAS,CAAET,MAAOM,EAAKP,MAAMC,MAAQ,MAG5CM,EAAKG,SAAS,CAAET,MAAOM,EAAKP,MAAMC,MAAQ,IAC1CW,QAAQC,IAAIN,EAAKP,MAAMC,OACvBK,EAAQK,KAAKN,6EAMf,IAFO,IAAAS,EAAAC,KACDC,EAAWD,KAAKE,MAAMC,OACnBC,EAAIH,EAASR,OAAS,EAAGW,EAAI,EAAGA,IAAK,CAC5C,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADEK,EAEf,CAACR,EAASI,GAAIJ,EAASG,IAAnDH,EAASG,GAFkCK,EAAA,GAE9BR,EAASI,GAFqBI,EAAA,GAK9C,OACEC,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAAA,4IAKFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,wCAC8BZ,KAAKf,MAAMC,MADzC,gBAEGc,KAAKf,MAAME,cAKnBc,EAASa,IAAI,SAAAC,GAAG,OACfL,EAAAC,EAAAC,cAAA,QACEC,UAAU,WACVG,IAAKD,EAAIE,GACTC,QAAS,kBAAMnB,EAAKV,gBAAgB0B,EAAIE,MAExCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQM,IAAKJ,EAAIK,KAAMC,IAAI,QAvBhD,YAnCmBC,IAAMC,WCEzBC,EAAS,CACb,CACEP,GAAI,EACJG,KAAM,sBAER,CACEH,GAAI,EACJG,KAAM,sBAER,CACEH,GAAI,EACJG,KAAM,sBAER,CACEH,GAAI,EACJG,KAAM,sBAER,CACEH,GAAI,EACJG,KAAM,sBAER,CACEH,GAAI,EACJG,KAAM,sBAER,CACEH,GAAI,EACJG,KAAM,sBAER,CACEH,GAAI,EACJG,KAAM,sBAER,CACEH,GAAI,EACJG,KAAM,sBAER,CACEH,GAAI,EACJG,KAAM,sBAER,CACEH,GAAI,GACJG,KAAM,uBAER,CACEH,GAAI,GACJG,KAAM,wBC/CVK,IAASC,OAAOhB,EAAAC,EAAAC,cDmDD,WACb,OAAOF,EAAAC,EAAAC,cAACe,EAAD,CAAYxB,OAAQqB,KCpDb,MAASI,SAASC,eAAe","file":"static/js/main.1a77e462.chunk.js","sourcesContent":["import React from \"react\";\n\nclass GridLayout extends React.Component {\n  state = {\n    count: 0,\n    highScore: 0,\n    clickedImage: []\n  };\n\n  handleIncrement = value => {\n    let clicked = this.state.clickedImage;\n    if (clicked.length >= 1) {\n      if (clicked.includes(value)) {\n        this.setState({ count: 0 });\n        this.setState({ clickedImage: [] });\n        if (this.state.count >= this.state.highScore) {\n          this.setState({ highScore: this.state.count });\n        }\n      } else {\n        clicked.push(value);\n        this.setState({ count: this.state.count + 1 });\n      }\n    } else {\n      this.setState({ count: this.state.count + 1 });\n      console.log(this.state.count);\n      clicked.push(value);\n    }\n  };\n\n  render() {\n    const pictures = this.props.images;\n    for (let i = pictures.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [pictures[i], pictures[j]] = [pictures[j], pictures[i]];\n    }\n\n    return (\n      <section className=\"container\">\n        <div className=\"div1\">\n          <ul>\n            <li className=\"inst\">\n              <h2>\n                Click on and image. The board with shuffle than click another\n                image. See how long you can go with out clicking the same image\n              </h2>\n            </li>\n            <li className=\"score\">\n              <h2>\n                Current Successful Clicks: {this.state.count} /High Score:\n                {this.state.highScore}\n              </h2>\n            </li>\n          </ul>\n        </div>\n        {pictures.map(pic => (\n          <span\n            className=\"imageDiv\"\n            key={pic.id}\n            onClick={() => this.handleIncrement(pic.id)}\n          >\n            <img className=\"image\" src={pic.link} alt=\"\" />\n          </span>\n        ))}\n        ;\n      </section>\n    );\n  }\n}\nexport default GridLayout;\n","import React from \"react\";\nimport GridLayout from \"./components/gridLayout\";\n//import Images from \"./images.json\";\n\nconst Images = [\n  {\n    id: 0,\n    link: \"/images/image0.jpg\"\n  },\n  {\n    id: 1,\n    link: \"/images/image1.jpg\"\n  },\n  {\n    id: 2,\n    link: \"/images/image2.jpg\"\n  },\n  {\n    id: 3,\n    link: \"/images/image3.jpg\"\n  },\n  {\n    id: 4,\n    link: \"/images/image4.jpg\"\n  },\n  {\n    id: 5,\n    link: \"/images/image5.jpg\"\n  },\n  {\n    id: 6,\n    link: \"/images/image6.jpg\"\n  },\n  {\n    id: 7,\n    link: \"/images/image7.jpg\"\n  },\n  {\n    id: 8,\n    link: \"/images/image8.jpg\"\n  },\n  {\n    id: 9,\n    link: \"/images/image9.jpg\"\n  },\n  {\n    id: 10,\n    link: \"/images/image10.jpg\"\n  },\n  {\n    id: 11,\n    link: \"/images/image11.jpg\"\n  }\n];\n\nexport default function App() {\n  return <GridLayout images={Images} />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}